0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Users\\Егор\\AppData\\Local\\.meteor\\packages\\meteor-tool\\1.3.0_3\\mt-os.windows.x86_32\\dev_bundle\\bin\\\\node.exe',
1 verbose cli   'C:\\Users\\Егор\\AppData\\Local\\.meteor\\packages\\meteor-tool\\1.3.0_3\\mt-os.windows.x86_32\\dev_bundle\\lib\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'install',
1 verbose cli   '--save',
1 verbose cli   'xmlhttprequest',
1 verbose cli   'fibers',
1 verbose cli   'common-node' ]
2 info using npm@2.14.22
3 info using node@v0.10.43
4 verbose install initial load of C:\Meteor\zupjs4\zupjs\package.json
5 verbose installManyTop reading scoped package data from C:\Meteor\zupjs4\zupjs\node_modules\meteor-node-stubs\package.json
6 verbose installManyTop reading scoped package data from C:\Meteor\zupjs4\zupjs\node_modules\moysklad-client\package.json
7 verbose readDependencies loading dependencies from C:\Meteor\zupjs4\zupjs\package.json
8 silly cache add args [ 'xmlhttprequest', null ]
9 verbose cache add spec xmlhttprequest
10 silly cache add args [ 'fibers', null ]
11 verbose cache add spec fibers
12 silly cache add args [ 'common-node', null ]
13 verbose cache add spec common-node
14 silly cache add parsed spec { raw: 'xmlhttprequest',
14 silly cache add   scope: null,
14 silly cache add   name: 'xmlhttprequest',
14 silly cache add   rawSpec: '',
14 silly cache add   spec: 'latest',
14 silly cache add   type: 'tag' }
15 silly addNamed xmlhttprequest@latest
16 verbose addNamed "latest" is being treated as a dist-tag for xmlhttprequest
17 info addNameTag [ 'xmlhttprequest', 'latest' ]
18 silly mapToRegistry name xmlhttprequest
19 silly mapToRegistry using default registry
20 silly mapToRegistry registry https://registry.npmjs.org/
21 silly mapToRegistry uri https://registry.npmjs.org/xmlhttprequest
22 verbose addNameTag registry:https://registry.npmjs.org/xmlhttprequest not in flight; fetching
23 silly cache add parsed spec { raw: 'fibers',
23 silly cache add   scope: null,
23 silly cache add   name: 'fibers',
23 silly cache add   rawSpec: '',
23 silly cache add   spec: 'latest',
23 silly cache add   type: 'tag' }
24 silly addNamed fibers@latest
25 verbose addNamed "latest" is being treated as a dist-tag for fibers
26 info addNameTag [ 'fibers', 'latest' ]
27 silly mapToRegistry name fibers
28 silly mapToRegistry using default registry
29 silly mapToRegistry registry https://registry.npmjs.org/
30 silly mapToRegistry uri https://registry.npmjs.org/fibers
31 verbose addNameTag registry:https://registry.npmjs.org/fibers not in flight; fetching
32 silly cache add parsed spec { raw: 'common-node',
32 silly cache add   scope: null,
32 silly cache add   name: 'common-node',
32 silly cache add   rawSpec: '',
32 silly cache add   spec: 'latest',
32 silly cache add   type: 'tag' }
33 silly addNamed common-node@latest
34 verbose addNamed "latest" is being treated as a dist-tag for common-node
35 info addNameTag [ 'common-node', 'latest' ]
36 silly mapToRegistry name common-node
37 silly mapToRegistry using default registry
38 silly mapToRegistry registry https://registry.npmjs.org/
39 silly mapToRegistry uri https://registry.npmjs.org/common-node
40 verbose addNameTag registry:https://registry.npmjs.org/common-node not in flight; fetching
41 verbose request uri https://registry.npmjs.org/fibers
42 verbose request no auth needed
43 info attempt registry request try #1 at 11:46:18
44 verbose request id 12290f681c896ed7
45 verbose etag "BGY3GHQ20WIPNMMNW59E4YH59"
46 http request GET https://registry.npmjs.org/fibers
47 verbose request uri https://registry.npmjs.org/common-node
48 verbose request no auth needed
49 info attempt registry request try #1 at 11:46:18
50 verbose etag "9CO05JQ3CAREXXKDSWQZII0RQ"
51 http request GET https://registry.npmjs.org/common-node
52 verbose request uri https://registry.npmjs.org/xmlhttprequest
53 verbose request no auth needed
54 info attempt registry request try #1 at 11:46:18
55 verbose etag "6694FR45GTPIXY0I69BLEIF0M"
56 http request GET https://registry.npmjs.org/xmlhttprequest
57 http 304 https://registry.npmjs.org/xmlhttprequest
58 verbose headers { date: 'Fri, 01 Apr 2016 08:46:16 GMT',
58 verbose headers   via: '1.1 varnish',
58 verbose headers   'cache-control': 'max-age=300',
58 verbose headers   etag: '"6694FR45GTPIXY0I69BLEIF0M"',
58 verbose headers   age: '185',
58 verbose headers   connection: 'keep-alive',
58 verbose headers   'x-served-by': 'cache-ams4127-AMS',
58 verbose headers   'x-cache': 'HIT',
58 verbose headers   'x-cache-hits': '3',
58 verbose headers   'x-timer': 'S1459500376.258087,VS0,VE0',
58 verbose headers   vary: 'Accept' }
59 silly get cb [ 304,
59 silly get   { date: 'Fri, 01 Apr 2016 08:46:16 GMT',
59 silly get     via: '1.1 varnish',
59 silly get     'cache-control': 'max-age=300',
59 silly get     etag: '"6694FR45GTPIXY0I69BLEIF0M"',
59 silly get     age: '185',
59 silly get     connection: 'keep-alive',
59 silly get     'x-served-by': 'cache-ams4127-AMS',
59 silly get     'x-cache': 'HIT',
59 silly get     'x-cache-hits': '3',
59 silly get     'x-timer': 'S1459500376.258087,VS0,VE0',
59 silly get     vary: 'Accept' } ]
60 verbose etag https://registry.npmjs.org/xmlhttprequest from cache
61 verbose get saving xmlhttprequest to C:\Users\Егор\AppData\Roaming\npm-cache\registry.npmjs.org\xmlhttprequest\.cache.json
62 verbose correctMkdir C:\Users\Егор\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
63 http 304 https://registry.npmjs.org/fibers
64 verbose headers { date: 'Fri, 01 Apr 2016 08:46:16 GMT',
64 verbose headers   via: '1.1 varnish',
64 verbose headers   'cache-control': 'max-age=300',
64 verbose headers   etag: '"BGY3GHQ20WIPNMMNW59E4YH59"',
64 verbose headers   age: '277',
64 verbose headers   connection: 'keep-alive',
64 verbose headers   'x-served-by': 'cache-ams4141-AMS',
64 verbose headers   'x-cache': 'HIT',
64 verbose headers   'x-cache-hits': '2',
64 verbose headers   'x-timer': 'S1459500376.276958,VS0,VE0',
64 verbose headers   vary: 'Accept' }
65 silly get cb [ 304,
65 silly get   { date: 'Fri, 01 Apr 2016 08:46:16 GMT',
65 silly get     via: '1.1 varnish',
65 silly get     'cache-control': 'max-age=300',
65 silly get     etag: '"BGY3GHQ20WIPNMMNW59E4YH59"',
65 silly get     age: '277',
65 silly get     connection: 'keep-alive',
65 silly get     'x-served-by': 'cache-ams4141-AMS',
65 silly get     'x-cache': 'HIT',
65 silly get     'x-cache-hits': '2',
65 silly get     'x-timer': 'S1459500376.276958,VS0,VE0',
65 silly get     vary: 'Accept' } ]
66 verbose etag https://registry.npmjs.org/fibers from cache
67 verbose get saving fibers to C:\Users\Егор\AppData\Roaming\npm-cache\registry.npmjs.org\fibers\.cache.json
68 verbose correctMkdir C:\Users\Егор\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
69 silly addNameTag next cb for xmlhttprequest with tag latest
70 silly addNamed xmlhttprequest@1.8.0
71 verbose addNamed "1.8.0" is a plain semver version for xmlhttprequest
72 silly addNameTag next cb for fibers with tag latest
73 silly addNamed fibers@1.0.10
74 verbose addNamed "1.0.10" is a plain semver version for fibers
75 silly cache afterAdd fibers@1.0.10
76 verbose afterAdd C:\Users\Егор\AppData\Roaming\npm-cache\fibers\1.0.10\package\package.json not in flight; writing
77 verbose correctMkdir C:\Users\Егор\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
78 silly cache afterAdd xmlhttprequest@1.8.0
79 verbose afterAdd C:\Users\Егор\AppData\Roaming\npm-cache\xmlhttprequest\1.8.0\package\package.json not in flight; writing
80 verbose correctMkdir C:\Users\Егор\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
81 verbose afterAdd C:\Users\Егор\AppData\Roaming\npm-cache\xmlhttprequest\1.8.0\package\package.json written
82 verbose afterAdd C:\Users\Егор\AppData\Roaming\npm-cache\fibers\1.0.10\package\package.json written
83 http 304 https://registry.npmjs.org/common-node
84 verbose headers { date: 'Fri, 01 Apr 2016 08:46:16 GMT',
84 verbose headers   via: '1.1 varnish',
84 verbose headers   'cache-control': 'max-age=300',
84 verbose headers   etag: '"9CO05JQ3CAREXXKDSWQZII0RQ"',
84 verbose headers   age: '0',
84 verbose headers   connection: 'keep-alive',
84 verbose headers   'x-served-by': 'cache-ams4136-AMS',
84 verbose headers   'x-cache': 'HIT',
84 verbose headers   'x-cache-hits': '1',
84 verbose headers   'x-timer': 'S1459500376.267576,VS0,VE171',
84 verbose headers   vary: 'Accept' }
85 silly get cb [ 304,
85 silly get   { date: 'Fri, 01 Apr 2016 08:46:16 GMT',
85 silly get     via: '1.1 varnish',
85 silly get     'cache-control': 'max-age=300',
85 silly get     etag: '"9CO05JQ3CAREXXKDSWQZII0RQ"',
85 silly get     age: '0',
85 silly get     connection: 'keep-alive',
85 silly get     'x-served-by': 'cache-ams4136-AMS',
85 silly get     'x-cache': 'HIT',
85 silly get     'x-cache-hits': '1',
85 silly get     'x-timer': 'S1459500376.267576,VS0,VE171',
85 silly get     vary: 'Accept' } ]
86 verbose etag https://registry.npmjs.org/common-node from cache
87 verbose get saving common-node to C:\Users\Егор\AppData\Roaming\npm-cache\registry.npmjs.org\common-node\.cache.json
88 verbose correctMkdir C:\Users\Егор\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
89 silly addNameTag next cb for common-node with tag latest
90 silly addNamed common-node@0.10.20
91 verbose addNamed "0.10.20" is a plain semver version for common-node
92 silly cache afterAdd common-node@0.10.20
93 verbose afterAdd C:\Users\Егор\AppData\Roaming\npm-cache\common-node\0.10.20\package\package.json not in flight; writing
94 verbose correctMkdir C:\Users\Егор\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
95 verbose afterAdd C:\Users\Егор\AppData\Roaming\npm-cache\common-node\0.10.20\package\package.json written
96 silly install resolved [ { name: 'xmlhttprequest',
96 silly install resolved     description: 'XMLHttpRequest for Node',
96 silly install resolved     version: '1.8.0',
96 silly install resolved     author: { name: 'Dan DeFelippi', url: 'http://driverdan.com' },
96 silly install resolved     keywords: [ 'xhr', 'ajax' ],
96 silly install resolved     license: 'MIT',
96 silly install resolved     repository:
96 silly install resolved      { type: 'git',
96 silly install resolved        url: 'git://github.com/driverdan/node-XMLHttpRequest.git' },
96 silly install resolved     bugs: { url: 'http://github.com/driverdan/node-XMLHttpRequest/issues' },
96 silly install resolved     engines: { node: '>=0.4.0' },
96 silly install resolved     directories: { lib: './lib', example: './example' },
96 silly install resolved     main: './lib/XMLHttpRequest.js',
96 silly install resolved     gitHead: '86ff70effb6dd529b34650242b9e3b1f0b8b6e86',
96 silly install resolved     homepage: 'https://github.com/driverdan/node-XMLHttpRequest',
96 silly install resolved     _id: 'xmlhttprequest@1.8.0',
96 silly install resolved     scripts: {},
96 silly install resolved     _shasum: '67fe075c5c24fef39f9d65f5f7b7fe75171968fc',
96 silly install resolved     _from: 'xmlhttprequest@latest',
96 silly install resolved     _npmVersion: '2.7.5',
96 silly install resolved     _nodeVersion: '0.12.2',
96 silly install resolved     _npmUser: { name: 'driverdan', email: 'dan@driverdan.com' },
96 silly install resolved     dist:
96 silly install resolved      { shasum: '67fe075c5c24fef39f9d65f5f7b7fe75171968fc',
96 silly install resolved        tarball: 'http://registry.npmjs.org/xmlhttprequest/-/xmlhttprequest-1.8.0.tgz' },
96 silly install resolved     maintainers: [ [Object] ],
96 silly install resolved     _resolved: 'https://registry.npmjs.org/xmlhttprequest/-/xmlhttprequest-1.8.0.tgz',
96 silly install resolved     readme: 'ERROR: No README data found!' },
96 silly install resolved   { name: 'fibers',
96 silly install resolved     version: '1.0.10',
96 silly install resolved     description: 'Cooperative multi-tasking for Javascript',
96 silly install resolved     keywords:
96 silly install resolved      [ 'fiber',
96 silly install resolved        'fibers',
96 silly install resolved        'coroutine',
96 silly install resolved        'thread',
96 silly install resolved        'async',
96 silly install resolved        'parallel',
96 silly install resolved        'worker',
96 silly install resolved        'future',
96 silly install resolved        'promise' ],
96 silly install resolved     homepage: 'https://github.com/laverdet/node-fibers',
96 silly install resolved     author:
96 silly install resolved      { name: 'Marcel Laverdet',
96 silly install resolved        email: 'marcel@laverdet.com',
96 silly install resolved        url: 'https://github.com/laverdet/' },
96 silly install resolved     main: 'fibers',
96 silly install resolved     scripts:
96 silly install resolved      { install: 'node build.js || nodejs build.js',
96 silly install resolved        test: 'node test.js || nodejs test.js' },
96 silly install resolved     repository:
96 silly install resolved      { type: 'git',
96 silly install resolved        url: 'git://github.com/laverdet/node-fibers.git' },
96 silly install resolved     license: 'MIT',
96 silly install resolved     engines: { node: '>=0.5.2' },
96 silly install resolved     readme: 'fibers(1) -- Fiber support for v8 and Node\n==========================================\n\nINSTALLING\n----------\n\n### via npm\n* `npm install fibers`\n* You\'re done!\n\n### from source\n* `git clone git://github.com/laverdet/node-fibers.git`\n* `cd node-fibers`\n* `npm install`\n\nNote: node-fibers uses [node-gyp](https://github.com/TooTallNate/node-gyp) for\nbuilding. To manually invoke the build process, you can use `node-gyp rebuild`.\nThis will put the compiled extension in `build/Release/fibers.node`. However,\nwhen you do `require(\'fibers\')`, it will expect the module to be in, for\nexample, `bin/linux-x64-v8-3.11/fibers.node`. You can manually put the module\nhere every time you build, or you can use the included build script. Either\n`npm install` or `node build -f` will do this for you. If you are going to be\nhacking on node-fibers, it may be worthwhile to first do `node-gyp configure`\nand then for subsequent rebuilds you can just do `node-gyp build` which will\nbe faster than a full `npm install` or `node-gyp rebuild`.\n\n### important!\nIt\'s recommended that you use node 0.6.18 or higher with node-fibers. Using\nother versions may lead to instability during high loads.\n\n### other notes\nUnlike most NodeJS projects, node-fibers is a C++ project. Some extra work is\nrequired to compile node-fibers, but pretty much every platform is supported\nin some way. Binary distributions in 32 and 64-bit forms are provided in npm for\nLinux, OS X, and Windows (special thanks to\n[Jeroen Janssen](https://github.com/japj) for his work on fibers in Windows).\n\nSupport for Solaris, FreeBSD, and OpenBSD is provided by compiling the extension\non your system during install time via\n[node-gyp](https://github.com/TooTallNate/node-gyp). If your operating system\nisn\'t listed here you may have luck copying the build process for one of the\nother OS\'s, assuming you are running a POSIX-like OS.\n\nnode 0.6.x is required to run this release of node-fibers. Older versions of\nnode (0.4.x) are supported in older releases of node-fibers. See the 0.5.x\nbranch of node-fibers for documentation.\n\n\nEXAMPLES\n--------\n\nThe examples below describe basic use of `Fiber`, but note that it is **not\nrecommended** to use `Fiber` without an abstraction in between your code and\nfibers. See "FUTURES" below for additional information.\n\n### Sleep\nThis is a quick example of how you can write sleep() with fibers. Note that\nwhile the sleep() call is blocking inside the fiber, node is able to handle\nother events.\n\n\t$ cat sleep.js\n\n```javascript\nvar Fiber = require(\'fibers\');\n\nfunction sleep(ms) {\n\tvar fiber = Fiber.current;\n\tsetTimeout(function() {\n\t\tfiber.run();\n\t}, ms);\n\tFiber.yield();\n}\n\nFiber(function() {\n\tconsole.log(\'wait... \' + new Date);\n\tsleep(1000);\n\tconsole.log(\'ok... \' + new Date);\n}).run();\nconsole.log(\'back in main\');\n```\n\n\t$ node sleep.js\n\twait... Fri Jan 21 2011 22:42:04 GMT+0900 (JST)\n\tback in main\n\tok... Fri Jan 21 2011 22:42:05 GMT+0900 (JST)\n\n\n### Incremental Generator\nYielding execution will resume back in the fiber right where you left off. You\ncan also pass values back and forth through yield() and run(). Again, the node\nevent loop is never blocked while this script is running.\n\n\t$ cat generator.js\n\n```javascript\nvar Fiber = require(\'fibers\');\n\nvar inc = Fiber(function(start) {\n\tvar total = start;\n\twhile (true) {\n\t\ttotal += Fiber.yield(total);\n\t}\n});\n\nfor (var ii = inc.run(1); ii <= 10; ii = inc.run(1)) {\n\tconsole.log(ii);\n}\n```\n\n\t$ node generator.js\n\t1\n\t2\n\t3\n\t4\n\t5\n\t6\n\t7\n\t8\n\t9\n\t10\n\n\n### Fibonacci Generator\nExpanding on the incremental generator above, we can create a generator which\nreturns a new Fibonacci number with each invocation. You can compare this with\nthe [ECMAScript Harmony\nGenerator](http://wiki.ecmascript.org/doku.php?id=harmony:generators) Fibonacci\nexample.\n\n\t$ cat fibonacci.js\n\n```javascript\nvar Fiber = require(\'fibers\');\n\n// Generator function. Returns a function which returns incrementing\n// Fibonacci numbers with each call.\nfunction Fibonacci() {\n\t// Create a new fiber which yields sequential Fibonacci numbers\n\tvar fiber = Fiber(function() {\n\t\tFiber.yield(0); // F(0) -> 0\n\t\tvar prev = 0, curr = 1;\n\t\twhile (true) {\n\t\t\tFiber.yield(curr);\n\t\t\tvar tmp = prev + curr;\n\t\t\tprev = curr;\n\t\t\tcurr = tmp;\n\t\t}\n\t});\n\t// Return a bound handle to `run` on this fiber\n\treturn fiber.run.bind(fiber);\n}\n\n// Initialize a new Fibonacci sequence and iterate up to 1597\nvar seq = Fibonacci();\nfor (var ii = seq(); ii <= 1597; ii = seq()) {\n\tconsole.log(ii);\n}\n```\n\n\t$ node fibonacci.js\n\t0\n\t1\n\t1\n\t2\n\t3\n\t5\n\t8\n\t13\n\t21\n\t34\n\t55\n\t89\n\t144\n\t233\n\t377\n\t610\n\t987\n\t1597\n\n\n### Basic Exceptions\nFibers are exception-safe; exceptions will continue travelling through fiber\nboundaries:\n\n\t$ cat error.js\n\n```javascript\nvar Fiber = require(\'fibers\');\n\nvar fn = Fiber(function() {\n\tconsole.log(\'async work here...\');\n\tFiber.yield();\n\tconsole.log(\'still working...\');\n\tFiber.yield();\n\tconsole.log(\'just a little bit more...\');\n\tFiber.yield();\n\tthrow new Error(\'oh crap!\');\n});\n\ntry {\n\twhile (true) {\n\t\tfn.run();\n\t}\n} catch(e) {\n\tconsole.log(\'safely caught that error!\');\n\tconsole.log(e.stack);\n}\nconsole.log(\'done!\');\n```\n\n\t$ node error.js\n\tasync work here...\n\tstill working...\n\tjust a little bit more...\n\tsafely caught that error!\n\tError: oh crap!\n\t\t\tat error.js:11:9\n\tdone!\n\n\nFUTURES\n-------\n\nUsing the `Fiber` class without an abstraction in between your code and the raw\nAPI is **not recommended**. `Fiber` is meant to implement the smallest amount of\nfunctionality in order make possible many different programming patterns. This\nmakes the `Fiber` class relatively lousy to work with directly, but extremely\npowerful when coupled with a decent abstraction. There is no right answer for\nwhich abstraction is right for you and your project. Included with `node-fibers`\nis an implementation of "futures" which is fiber-aware. Usage of this library\nis documented below. There are several other externally-maintained options\nwhich can be found on the [wiki](https://github.com/laverdet/node-fibers/wiki).\nYou **should** feel encouraged to be creative with fibers and build a solution\nwhich works well with your project. For instance, `Future` is not a good\nabstraction to use if you want to build a generator function (see Fibonacci\nexample above).\n\nUsing `Future` to wrap existing node functions. At no point is the node event\nloop blocked:\n\n\t$ cat ls.js\n\n```javascript\nvar Future = require(\'fibers/future\');\nvar fs = Future.wrap(require(\'fs\'));\n\nFuture.task(function() {\n\t// Get a list of files in the directory\n\tvar fileNames = fs.readdirFuture(\'.\').wait();\n\tconsole.log(\'Found \'+ fileNames.length+ \' files\');\n\n\t// Stat each file\n\tvar stats = [];\n\tfor (var ii = 0; ii < fileNames.length; ++ii) {\n\t\tstats.push(fs.statFuture(fileNames[ii]));\n\t}\n\tstats.map(function(f) {\n\t\tf.wait()\n\t});\n\n\t// Print file size\n\tfor (var ii = 0; ii < fileNames.length; ++ii) {\n\t\tconsole.log(fileNames[ii]+ \': \'+ stats[ii].get().size);\n\t}\n}).detach();\n```\n\n\t$ node ls.js \n\tFound 11 files\n\tbin: 4096\n\tfibers.js: 1708\n\t.gitignore: 37\n\tREADME.md: 8664\n\tfuture.js: 5833\n\t.git: 4096\n\tLICENSE: 1054\n\tsrc: 4096\n\tls.js: 860\n\tMakefile: 436\n\tpackage.json: 684\n\n\nThe future API is designed to make it easy to move between classic\ncallback-style code and fiber-aware waiting code:\n\n\t$ cat sleep.js\n\n```javascript\nvar Future = require(\'fibers/future\'), wait = Future.wait;\n\n// This function returns a future which resolves after a timeout. This\n// demonstrates manually resolving futures.\nfunction sleep(ms) {\n\tvar future = new Future;\n\tsetTimeout(function() {\n\t\tfuture.return();\n\t}, ms);\n\treturn future;\n}\n\n// You can create functions which automatically run in their own fiber and\n// return futures that resolve when the fiber returns (this probably sounds\n// confusing.. just play with it to understand).\nvar calcTimerDelta = function(ms) {\n\tvar start = new Date;\n\tsleep(ms).wait();\n\treturn new Date - start;\n}.future(); // <-- important!\n\n// And futures also include node-friendly callbacks if you don\'t want to use\n// wait()\ncalcTimerDelta(2000).resolve(function(err, val) {\n\tconsole.log(\'Set timer for 2000ms, waited \'+ val+ \'ms\');\n});\n```\n\n\t$ node sleep.js\n\tSet timer for 2000ms, waited 2009ms\n\n\nAPI DOCUMENTATION\n-----------------\nFiber\'s definition looks something like this:\n\n```javascript\n/**\n * Instantiate a new Fiber. You may invoke this either as a function or as\n * a constructor; the behavior is the same.\n *\n * When run() is called on this fiber for the first time, `fn` will be\n * invoked as the first frame on a new stack. Execution will continue on\n * this new stack until `fn` returns, or Fiber.yield() is called.\n *\n * After the function returns the fiber is reset to original state and\n * may be restarted with another call to run().\n */\nfunction Fiber(fn) {\n\t[native code]\n}\n\n/**\n * `Fiber.current` will contain the currently-running Fiber. It will be\n * `undefined` if there is no fiber (i.e. the main stack of execution).\n *\n * See "Garbage Collection" for more information on responsible use of\n * `Fiber.current`.\n */\nFiber.current = undefined;\n\n/**\n * `Fiber.yield()` will halt execution of the current fiber and return control\n * back to original caller of run(). If an argument is supplied to yield(),\n * run() will return that value.\n *\n * When run() is called again, yield() will return.\n *\n * Note that this function is a global to allow for correct garbage\n * collection. This results in no loss of functionality because it is only\n * valid to yield from the currently running fiber anyway.\n *\n * Note also that `yield` is a reserved word in Javascript. This is normally\n * not an issue, however some code linters may complain. Rest assured that it\n * will run fine now and in future versions of Javascript.\n */\nFiber.yield = function(param) {\n\t[native code]\n}\n\n/**\n * run() will start execution of this Fiber, or if it is currently yielding,\n * it will resume execution. If an argument is supplied, this argument will\n * be passed to the fiber, either as the first parameter to the main\n * function [if the fiber has not been started] or as the return value of\n * yield() [if the fiber is currently yielding].\n *\n * This function will return either the parameter passed to yield(), or the\n * returned value from the fiber\'s main function.\n */\nFiber.prototype.run = function(param) {\n\t[native code]\n}\n\n/**\n * reset() will terminate a running Fiber and restore it to its original\n * state, as if it had returned execution.\n *\n * This is accomplished by causing yield() to throw an exception, and any\n * futher calls to yield() will also throw an exception. This continues\n * until the fiber has completely unwound and returns.\n *\n * If the fiber returns a value it will be returned by reset().\n *\n * If the fiber is not running, reset() will have no effect.\n */\nFiber.prototype.reset = function() {\n\t[native code]\n}\n\n/**\n * throwInto() will cause a currently yielding fiber\'s yield() call to\n * throw instead of return gracefully. This can be useful for notifying a\n * fiber that you are no longer interested in its task, and that it should\n * give up.\n *\n * Note that if the fiber does not handle the exception it will continue to\n * bubble up and throwInto() will throw the exception right back at you.\n */\nFiber.prototype.throwInto = function(exception) {\n\t[native code]\n}\n```\n\n\nFuture\'s definition looks something like this:\n\n```javascript\n/**\n * Returns a future-function which, when run, starts running the target\n * function and returns a future for the result.\n * \n * Example usage: \n * var funcy = function(arg) {\n *   return arg+1;\n * }.future();\n * \n * funcy(1).wait(); // returns 2\n */\nFunction.prototype.future = function() { ... }\n\n/**\n * Future object, instantiated with the new operator.\n */\nfunction Future() {}\n\n/**\n * Wrap a node-style async function to return a future in place of using a callback.\n * \n * fn - the function or object to wrap\n * array - indicates that this callback will return more than 1 argument after `err`. For example,\n *         `child_process.exec()` returns [err, stdout, stderr]\n * suffix - appends a string to every method that was overridden, if you passed an object\n * \n * Example usage: Future.wrap(asyncFunction)(arg1).wait()\n */\nFuture.wrap = function(fn, multi, suffix) { ... }\n\n/**\n * Invoke a function that will be run in its own fiber context and return a future to its return\n * value.\n *\n * Example:\n * Future.task(function() {\n *   // You can safely `wait` on stuff here\n * }).detach();\n */\nFuture.task = function(fn) { ... }\n\n/**\n * Wait on a series of futures and then return. If the futures throw an exception this function\n * /won\'t/ throw it back. You can get the value of the future by calling get() on it directly. If\n * you want to wait on a single future you\'re better off calling future.wait() on the instance.\n * \n * Example usage: Future.wait(aFuture, anotherFuture)\n */\nFuture.wait = function(/* ... */) { ... }\n\n/**\n * Return the value of this future. If the future hasn\'t resolved yet this will throw an error.\n */\nFuture.prototype.get = function() { ... }\n\n/**\n * Mark this future as returned. All pending callbacks will be invoked immediately.\n * \n * value - the value to return when get() or wait() is called.\n * \n * Example usage: aFuture.return(value)\n */\nFuture.prototype.return = function(value) { ... }\n\n/**\n * Throw from this future as returned. All pending callbacks will be invoked immediately.\n * Note that execution will continue normally after running this method, \n * so make sure you exit appropriately after running throw()\n * \n * error - the error to throw when get() or wait() is called.\n * \n * Example usage: aFuture.throw(new Error("Something borked"))\n */\nFuture.prototype.throw = function(error) { ... }\n\n/**\n * "detach" this future. Basically this is useful if you want to run a task in a future, you\n * aren\'t interested in its return value, but if it throws you don\'t want the exception to be\n * lost. If this fiber throws, an exception will be thrown to the event loop and node will\n * probably fall down.\n */\nFuture.prototype.detach = function() { ... }\n\n/**\n * Returns whether or not this future has resolved yet.\n */\nFuture.prototype.isResolved = function() { ... }\n\n/**\n * Returns a node-style function which will mark this future as resolved when called.\n * \n * Example usage: \n *   var errback = aFuture.resolver();\n *   asyncFunction(arg1, arg2, etc, errback)\n *   var result = aFuture.wait();\n */\nFuture.prototype.resolver = function() { ... }\n\n/**\n * Waits for this future to resolve and then invokes a callback.\n *\n * If only one argument is passed it is a standard function(err, val){} errback.\n *\n * If two arguments are passed, the first argument is a future which will be thrown to in the case\n * of error, and the second is a function(val){} callback.\n */\nFuture.prototype.resolve = function(/* errback or future, callback */) { ... }\n\n/**\n * Propogate results to another future.\n * \n * Example usage: future1.proxy(future2) // future2 gets automatically resolved with however future1 resolves\n */\nFuture.prototype.proxy = function(future) { ... }\n\n/**\n * Differs from its functional counterpart in that it actually resolves the future. Thus if the\n * future threw, future.wait() will throw.\n */\nFuture.prototype.wait = function() { ... }\n\n/**\n * Support for converting a Future to and from ES6 Promises.\n */\nFuture.fromPromise = function(promise) { ... }\nFuture.prototype.promise = function() { ... }\n```\n\nGARBAGE COLLECTION\n------------------\n\nIf you intend to build generators, iterators, or "lazy lists", you should be\naware that all fibers must eventually unwind. This is implemented by causing\nyield() to throw unconditionally when the library is trying to unwind your\nfiber-- either because reset() was called, or all handles to the fiber were lost\nand v8 wants to delete it.\n\nSomething like this will, at some point, cause an infinite loop in your\napplication:\n\n```javascript\nvar fiber = Fiber(function() {\n\twhile (true) {\n\t\ttry {\n\t\t\tFiber.yield();\n\t\t} catch(e) {}\n\t}\n});\nfiber.run();\n```\n\nIf you either call reset() on this fiber, or the v8 garbage collector decides it\nis no longer in use, the fiber library will attempt to unwind the fiber by\ncausing all calls to yield() to throw. However, if you catch these exceptions\nand continue anyway, an infinite loop will occur.\n\nThere are other garbage collection issues that occur with misuse of fiber\nhandles. If you grab a handle to a fiber from within itself, you should make\nsure that the fiber eventually unwinds. This application will leak memory:\n\n```javascript\nvar fiber = Fiber(function() {\n\tvar that = Fiber.current;\n\tFiber.yield();\n}\nfiber.run();\nfiber = undefined;\n```\n\nThere is no way to get back into the fiber that was started, however it\'s\nimpossible for v8\'s garbage collector to detect this. With a handle to the fiber\nstill outstanding, v8 will never garbage collect it and the stack will remain in\nmemory until the application exits.\n\nThus, you should take care when grabbing references to `Fiber.current`.\n',
96 silly install resolved     readmeFilename: 'README.md',
96 silly install resolved     bugs: { url: 'https://github.com/laverdet/node-fibers/issues' },
96 silly install resolved     _id: 'fibers@1.0.10',
96 silly install resolved     _shasum: '0ccea7287e5dafd2626c2c9d3f15113a1b5829cd',
96 silly install resolved     _from: 'fibers@latest',
96 silly install resolved     _resolved: 'https://registry.npmjs.org/fibers/-/fibers-1.0.10.tgz' },
96 silly install resolved   { name: 'common-node',
96 silly install resolved     keywords: [ 'commonjs' ],
96 silly install resolved     description: 'Synchronous CommonJS compatibility layer using node-fibers',
96 silly install resolved     version: '0.10.20',
96 silly install resolved     author: { name: 'Oleg Podsechin', email: 'oleg@ionsquare.com' },
96 silly install resolved     contributors: [ [Object], [Object] ],
96 silly install resolved     directories: { lib: './lib', example: './examples' },
96 silly install resolved     repository: { type: 'git', url: 'git://github.com/olegp/common-node.git' },
96 silly install resolved     homepage: 'http://github.com/olegp/common-node/',
96 silly install resolved     main: './lib/all.js',
96 silly install resolved     scripts: { test: 'node test/all.js' },
96 silly install resolved     bin: { 'common-node': './bin/common-node' },
96 silly install resolved     engines: { node: '>=0.10.0' },
96 silly install resolved     dependencies: { fibers: '>=1.0.0' },
96 silly install resolved     preferGlobal: true,
96 silly install resolved     licenses: [ [Object] ],
96 silly install resolved     gitHead: '8d4445004a3f710bc0b8879a4a770da59938dedb',
96 silly install resolved     bugs: { url: 'https://github.com/olegp/common-node/issues' },
96 silly install resolved     _id: 'common-node@0.10.20',
96 silly install resolved     _shasum: 'a31ee521ae0c26207ac2c34290780b9088f1626f',
96 silly install resolved     _from: 'common-node@latest',
96 silly install resolved     _npmVersion: '1.4.23',
96 silly install resolved     _npmUser: { name: 'alexlamsl', email: 'alex+npm@starthq.com' },
96 silly install resolved     maintainers: [ [Object], [Object] ],
96 silly install resolved     dist:
96 silly install resolved      { shasum: 'a31ee521ae0c26207ac2c34290780b9088f1626f',
96 silly install resolved        tarball: 'http://registry.npmjs.org/common-node/-/common-node-0.10.20.tgz' },
96 silly install resolved     _resolved: 'https://registry.npmjs.org/common-node/-/common-node-0.10.20.tgz',
96 silly install resolved     readme: 'ERROR: No README data found!' } ]
97 info install xmlhttprequest@1.8.0 into C:\Meteor\zupjs4\zupjs
98 info install fibers@1.0.10 into C:\Meteor\zupjs4\zupjs
99 info install common-node@0.10.20 into C:\Meteor\zupjs4\zupjs
100 info installOne xmlhttprequest@1.8.0
101 verbose installOne of xmlhttprequest to C:\Meteor\zupjs4\zupjs not in flight; installing
102 verbose correctMkdir C:\Users\Егор\AppData\Roaming\npm-cache\_locks correctMkdir not in flight; initializing
103 info installOne fibers@1.0.10
104 verbose installOne of fibers to C:\Meteor\zupjs4\zupjs not in flight; installing
105 verbose correctMkdir C:\Users\Егор\AppData\Roaming\npm-cache\_locks correctMkdir already in flight; waiting
106 info installOne common-node@0.10.20
107 verbose installOne of common-node to C:\Meteor\zupjs4\zupjs not in flight; installing
108 verbose correctMkdir C:\Users\Егор\AppData\Roaming\npm-cache\_locks correctMkdir already in flight; waiting
109 verbose lock using C:\Users\Егор\AppData\Roaming\npm-cache\_locks\xmlhttprequest-cf0b29c9c5cc2049.lock for C:\Meteor\zupjs4\zupjs\node_modules\xmlhttprequest
110 verbose lock using C:\Users\Егор\AppData\Roaming\npm-cache\_locks\common-node-c2df3467fcb677ed.lock for C:\Meteor\zupjs4\zupjs\node_modules\common-node
111 silly install write writing xmlhttprequest 1.8.0 to C:\Meteor\zupjs4\zupjs\node_modules\xmlhttprequest
112 silly install write writing common-node 0.10.20 to C:\Meteor\zupjs4\zupjs\node_modules\common-node
113 verbose lock using C:\Users\Егор\AppData\Roaming\npm-cache\_locks\fibers-769700e8d12c08c8.lock for C:\Meteor\zupjs4\zupjs\node_modules\fibers
114 silly install write writing fibers 1.0.10 to C:\Meteor\zupjs4\zupjs\node_modules\fibers
115 verbose unbuild node_modules\xmlhttprequest
116 verbose unbuild node_modules\common-node
117 verbose unbuild node_modules\fibers
118 silly gentlyRm C:\Meteor\zupjs4\zupjs\node_modules\xmlhttprequest is being purged from base C:\Meteor\zupjs4\zupjs
119 verbose gentlyRm don't care about contents; nuking C:\Meteor\zupjs4\zupjs\node_modules\xmlhttprequest
120 verbose tar unpack C:\Users\Егор\AppData\Roaming\npm-cache\xmlhttprequest\1.8.0\package.tgz
121 verbose tar unpacking to C:\Meteor\zupjs4\zupjs\node_modules\xmlhttprequest
122 silly gentlyRm C:\Meteor\zupjs4\zupjs\node_modules\xmlhttprequest is being purged
123 verbose gentlyRm don't care about contents; nuking C:\Meteor\zupjs4\zupjs\node_modules\xmlhttprequest
124 silly gentlyRm C:\Meteor\zupjs4\zupjs\node_modules\common-node is being purged from base C:\Meteor\zupjs4\zupjs
125 verbose gentlyRm don't care about contents; nuking C:\Meteor\zupjs4\zupjs\node_modules\common-node
126 silly gentlyRm C:\Meteor\zupjs4\zupjs\node_modules\fibers is being purged from base C:\Meteor\zupjs4\zupjs
127 verbose gentlyRm don't care about contents; nuking C:\Meteor\zupjs4\zupjs\node_modules\fibers
128 silly gunzTarPerm modes [ '777', '666' ]
129 verbose tar unpack C:\Users\Егор\AppData\Roaming\npm-cache\common-node\0.10.20\package.tgz
130 verbose tar unpacking to C:\Meteor\zupjs4\zupjs\node_modules\common-node
131 silly gentlyRm C:\Meteor\zupjs4\zupjs\node_modules\common-node is being purged
132 verbose gentlyRm don't care about contents; nuking C:\Meteor\zupjs4\zupjs\node_modules\common-node
133 verbose tar unpack C:\Users\Егор\AppData\Roaming\npm-cache\fibers\1.0.10\package.tgz
134 verbose tar unpacking to C:\Meteor\zupjs4\zupjs\node_modules\fibers
135 silly gentlyRm C:\Meteor\zupjs4\zupjs\node_modules\fibers is being purged
136 verbose gentlyRm don't care about contents; nuking C:\Meteor\zupjs4\zupjs\node_modules\fibers
137 silly gunzTarPerm modes [ '777', '666' ]
138 silly gunzTarPerm modes [ '777', '666' ]
139 silly gunzTarPerm extractEntry package.json
140 silly gunzTarPerm modified mode [ 'package.json', 420, 438 ]
141 silly gunzTarPerm extractEntry package.json
142 silly gunzTarPerm modified mode [ 'package.json', 420, 438 ]
143 silly gunzTarPerm extractEntry .npmignore
144 silly gunzTarPerm modified mode [ '.npmignore', 420, 438 ]
145 silly gunzTarPerm extractEntry README.md
146 silly gunzTarPerm modified mode [ 'README.md', 420, 438 ]
147 silly gunzTarPerm extractEntry .npmignore
148 silly gunzTarPerm modified mode [ '.npmignore', 420, 438 ]
149 silly gunzTarPerm extractEntry README.md
150 silly gunzTarPerm modified mode [ 'README.md', 420, 438 ]
151 silly gunzTarPerm extractEntry package.json
152 silly gunzTarPerm extractEntry .npmignore
153 silly gunzTarPerm extractEntry README.md
154 silly gunzTarPerm extractEntry LICENSE
155 silly gunzTarPerm modified mode [ 'LICENSE', 420, 438 ]
156 silly gunzTarPerm extractEntry doc/index.html
157 silly gunzTarPerm extractEntry doc/all/index.html
158 silly gunzTarPerm extractEntry LICENSE
159 silly gunzTarPerm modified mode [ 'LICENSE', 420, 438 ]
160 silly gunzTarPerm extractEntry .jshintrc
161 silly gunzTarPerm modified mode [ '.jshintrc', 420, 438 ]
162 silly gunzTarPerm extractEntry quick-test.js
163 silly gunzTarPerm modified mode [ 'quick-test.js', 420, 438 ]
164 silly gunzTarPerm extractEntry future.js
165 silly gunzTarPerm modified mode [ 'future.js', 420, 438 ]
166 silly gunzTarPerm extractEntry build.js
167 silly gunzTarPerm modified mode [ 'build.js', 493, 511 ]
168 silly gunzTarPerm extractEntry doc/binary/index.html
169 silly gunzTarPerm extractEntry doc/fs-base/index.html
170 silly gunzTarPerm extractEntry lib/XMLHttpRequest.js
171 silly gunzTarPerm modified mode [ 'lib/XMLHttpRequest.js', 420, 438 ]
172 silly gunzTarPerm extractEntry doc/httpclient/index.html
173 silly gunzTarPerm extractEntry doc/assert/index.html
174 silly gunzTarPerm extractEntry test.js
175 silly gunzTarPerm modified mode [ 'test.js', 493, 511 ]
176 silly gunzTarPerm extractEntry fibers.js
177 silly gunzTarPerm modified mode [ 'fibers.js', 420, 438 ]
178 silly gunzTarPerm extractEntry note.txt
179 silly gunzTarPerm modified mode [ 'note.txt', 420, 438 ]
180 silly gunzTarPerm extractEntry binding.gyp
181 silly gunzTarPerm modified mode [ 'binding.gyp', 420, 438 ]
182 silly gunzTarPerm extractEntry bin/.npmignore
183 silly gunzTarPerm modified mode [ 'bin/.npmignore', 420, 438 ]
184 silly gunzTarPerm extractEntry bin/win32-x64-v8-4.6/fibers.node
185 silly gunzTarPerm modified mode [ 'bin/win32-x64-v8-4.6/fibers.node', 420, 438 ]
186 silly gunzTarPerm extractEntry doc/io/index.html
187 silly gunzTarPerm extractEntry doc/jsgi/index.html
188 silly gunzTarPerm extractEntry doc/static/jquery.js
189 silly gunzTarPerm extractEntry doc/static/jsdoc.js
190 silly gunzTarPerm extractEntry doc/static/jsdoc.css
191 silly gunzTarPerm extractEntry doc/static/style.css
192 silly gunzTarPerm extractEntry doc/system/index.html
193 silly gunzTarPerm extractEntry doc/test/index.html
194 verbose write writing to C:\Meteor\zupjs4\zupjs\node_modules\xmlhttprequest\package.json
195 silly gunzTarPerm extractEntry bin/darwin-ia32-v8-4.6/fibers.node
196 silly gunzTarPerm modified mode [ 'bin/darwin-ia32-v8-4.6/fibers.node', 493, 511 ]
197 info preinstall xmlhttprequest@1.8.0
198 verbose readDependencies loading dependencies from C:\Meteor\zupjs4\zupjs\node_modules\xmlhttprequest\package.json
199 silly gunzTarPerm extractEntry bin/darwin-x64-v8-4.5/fibers.node
200 silly gunzTarPerm modified mode [ 'bin/darwin-x64-v8-4.5/fibers.node', 493, 511 ]
201 silly gunzTarPerm extractEntry bin/darwin-x64-v8-4.6/fibers.node
202 silly gunzTarPerm modified mode [ 'bin/darwin-x64-v8-4.6/fibers.node', 493, 511 ]
203 verbose readDependencies loading dependencies from C:\Meteor\zupjs4\zupjs\node_modules\xmlhttprequest\package.json
204 silly gunzTarPerm extractEntry benchmarks/run.js
205 silly gunzTarPerm extractEntry benchmarks/buffer-alloc/common-node.js
206 silly gunzTarPerm extractEntry benchmarks/buffer-alloc/node.js
207 silly install resolved []
208 verbose about to build C:\Meteor\zupjs4\zupjs\node_modules\xmlhttprequest
209 info build C:\Meteor\zupjs4\zupjs\node_modules\xmlhttprequest
210 silly gunzTarPerm extractEntry bin/linux-ia32-v8-4.5/fibers.node
211 silly gunzTarPerm modified mode [ 'bin/linux-ia32-v8-4.5/fibers.node', 493, 511 ]
212 silly gunzTarPerm extractEntry bin/linux-ia32-v8-4.6/fibers.node
213 silly gunzTarPerm modified mode [ 'bin/linux-ia32-v8-4.6/fibers.node', 493, 511 ]
214 info linkStuff xmlhttprequest@1.8.0
215 silly linkStuff xmlhttprequest@1.8.0 has C:\Meteor\zupjs4\zupjs\node_modules as its parent node_modules
216 verbose linkBins xmlhttprequest@1.8.0
217 verbose linkMans xmlhttprequest@1.8.0
218 verbose rebuildBundles xmlhttprequest@1.8.0
219 silly gunzTarPerm extractEntry bin/darwin-ia32-v8-4.5/fibers.node
220 silly gunzTarPerm modified mode [ 'bin/darwin-ia32-v8-4.5/fibers.node', 493, 511 ]
221 info install xmlhttprequest@1.8.0
222 silly gunzTarPerm extractEntry bin/linux-x64-v8-4.6/fibers.node
223 silly gunzTarPerm modified mode [ 'bin/linux-x64-v8-4.6/fibers.node', 493, 511 ]
224 info postinstall xmlhttprequest@1.8.0
225 silly gunzTarPerm extractEntry benchmarks/buffer-alloc/ringo.js
226 verbose unlock done using C:\Users\Егор\AppData\Roaming\npm-cache\_locks\xmlhttprequest-cf0b29c9c5cc2049.lock for C:\Meteor\zupjs4\zupjs\node_modules\xmlhttprequest
227 silly gunzTarPerm extractEntry bin/repl
228 silly gunzTarPerm modified mode [ 'bin/repl', 493, 511 ]
229 silly gunzTarPerm extractEntry bin/win32-ia32-v8-4.5/fibers.node
230 silly gunzTarPerm modified mode [ 'bin/win32-ia32-v8-4.5/fibers.node', 420, 438 ]
231 silly gunzTarPerm extractEntry benchmarks/file-read/common-node.js
232 silly gunzTarPerm extractEntry bin/win32-ia32-v8-4.6/fibers.node
233 silly gunzTarPerm modified mode [ 'bin/win32-ia32-v8-4.6/fibers.node', 420, 438 ]
234 silly gunzTarPerm extractEntry benchmarks/file-read/node.js
235 silly gunzTarPerm extractEntry benchmarks/file-read/ringo.js
236 silly gunzTarPerm extractEntry benchmarks/file-stream/common-node.js
237 silly gunzTarPerm extractEntry bin/win32-x64-v8-4.5/fibers.node
238 silly gunzTarPerm modified mode [ 'bin/win32-x64-v8-4.5/fibers.node', 420, 438 ]
239 silly gunzTarPerm extractEntry bin/linux-x64-v8-4.5/fibers.node
240 silly gunzTarPerm modified mode [ 'bin/linux-x64-v8-4.5/fibers.node', 493, 511 ]
241 silly gunzTarPerm extractEntry src/coroutine.cc
242 silly gunzTarPerm modified mode [ 'src/coroutine.cc', 420, 438 ]
243 silly gunzTarPerm extractEntry src/coroutine.h
244 silly gunzTarPerm modified mode [ 'src/coroutine.h', 420, 438 ]
245 silly gunzTarPerm extractEntry src/fibers.cc
246 silly gunzTarPerm modified mode [ 'src/fibers.cc', 420, 438 ]
247 silly gunzTarPerm extractEntry src/libcoro/README
248 silly gunzTarPerm modified mode [ 'src/libcoro/README', 420, 438 ]
249 silly gunzTarPerm extractEntry benchmarks/file-stream/node.js
250 silly gunzTarPerm extractEntry benchmarks/file-stream/ringo.js
251 silly gunzTarPerm extractEntry src/libcoro/LICENSE
252 silly gunzTarPerm modified mode [ 'src/libcoro/LICENSE', 420, 438 ]
253 silly gunzTarPerm extractEntry benchmarks/graph
254 silly gunzTarPerm extractEntry benchmarks/hello-world/common-node.js
255 silly gunzTarPerm extractEntry benchmarks/hello-world/node.js
256 silly gunzTarPerm extractEntry benchmarks/hello-world/ringo.js
257 silly gunzTarPerm extractEntry benchmarks/no-alloc/common-node.js
258 silly gunzTarPerm extractEntry benchmarks/no-alloc/node.js
259 silly gunzTarPerm extractEntry benchmarks/no-alloc/ringo.js
260 silly gunzTarPerm extractEntry benchmarks/run
261 silly gunzTarPerm extractEntry benchmarks/set-timeout/common-node.js
262 silly gunzTarPerm extractEntry benchmarks/set-timeout/node.js
263 silly gunzTarPerm extractEntry benchmarks/set-timeout/ringo.js
264 silly gunzTarPerm extractEntry benchmarks/string-alloc/common-node.js
265 silly gunzTarPerm extractEntry benchmarks/string-alloc/node.js
266 silly gunzTarPerm extractEntry benchmarks/string-alloc/ringo.js
267 silly gunzTarPerm extractEntry bin/common-node
268 silly gunzTarPerm extractEntry .travis.yml
269 silly gunzTarPerm extractEntry examples/base64.js
270 silly gunzTarPerm extractEntry examples/chat.js
271 silly gunzTarPerm extractEntry examples/hello.js
272 silly gunzTarPerm extractEntry examples/http.js
273 silly gunzTarPerm extractEntry examples/sleep.js
274 silly gunzTarPerm extractEntry examples/spawn.js
275 silly gunzTarPerm extractEntry examples/static.js
276 silly gunzTarPerm extractEntry src/libcoro/conftest.c
277 silly gunzTarPerm modified mode [ 'src/libcoro/conftest.c', 420, 438 ]
278 silly gunzTarPerm extractEntry src/libcoro/coro.c
279 silly gunzTarPerm modified mode [ 'src/libcoro/coro.c', 420, 438 ]
280 silly gunzTarPerm extractEntry examples/traceur.js
281 silly gunzTarPerm extractEntry src/libcoro/coro.h
282 silly gunzTarPerm modified mode [ 'src/libcoro/coro.h', 420, 438 ]
283 silly gunzTarPerm extractEntry test/already-running.js
284 silly gunzTarPerm modified mode [ 'test/already-running.js', 420, 438 ]
285 silly gunzTarPerm extractEntry test/exit.js
286 silly gunzTarPerm modified mode [ 'test/exit.js', 420, 438 ]
287 silly gunzTarPerm extractEntry test/fibonacci.js
288 silly gunzTarPerm modified mode [ 'test/fibonacci.js', 420, 438 ]
289 silly gunzTarPerm extractEntry test/finish-multiple.js
290 silly gunzTarPerm modified mode [ 'test/finish-multiple.js', 420, 438 ]
291 silly gunzTarPerm extractEntry test/future-exception.js
292 silly gunzTarPerm modified mode [ 'test/future-exception.js', 420, 438 ]
293 silly gunzTarPerm extractEntry test/exec.js
294 silly gunzTarPerm modified mode [ 'test/exec.js', 420, 438 ]
295 silly gunzTarPerm extractEntry test/illegal-yield.js
296 silly gunzTarPerm modified mode [ 'test/illegal-yield.js', 420, 438 ]
297 silly gunzTarPerm extractEntry test/pool.js
298 silly gunzTarPerm modified mode [ 'test/pool.js', 420, 438 ]
299 silly gunzTarPerm extractEntry test/process-title.js
300 silly gunzTarPerm modified mode [ 'test/process-title.js', 420, 438 ]
301 silly gunzTarPerm extractEntry test/stack-overflow.js
302 silly gunzTarPerm modified mode [ 'test/stack-overflow.js', 420, 438 ]
303 silly gunzTarPerm extractEntry test/stack-overflow2.js
304 silly gunzTarPerm modified mode [ 'test/stack-overflow2.js', 493, 511 ]
305 silly gunzTarPerm extractEntry test/current.js
306 silly gunzTarPerm modified mode [ 'test/current.js', 420, 438 ]
307 silly gunzTarPerm extractEntry test/stack-overflow3.js
308 silly gunzTarPerm modified mode [ 'test/stack-overflow3.js', 420, 438 ]
309 silly gunzTarPerm extractEntry test/child-process.js
310 silly gunzTarPerm modified mode [ 'test/child-process.js', 420, 438 ]
311 silly gunzTarPerm extractEntry test/started.js
312 silly gunzTarPerm modified mode [ 'test/started.js', 420, 438 ]
313 silly gunzTarPerm extractEntry test/bad-context.js
314 silly gunzTarPerm modified mode [ 'test/bad-context.js', 420, 438 ]
315 silly gunzTarPerm extractEntry examples/twitter.js
316 silly gunzTarPerm extractEntry lib/all.js
317 silly gunzTarPerm extractEntry test/unwind.js
318 silly gunzTarPerm modified mode [ 'test/unwind.js', 420, 438 ]
319 silly gunzTarPerm extractEntry test/future.js
320 silly gunzTarPerm modified mode [ 'test/future.js', 420, 438 ]
321 silly gunzTarPerm extractEntry lib/console.js
322 silly gunzTarPerm extractEntry lib/fs-base.js
323 silly gunzTarPerm extractEntry lib/global.js
324 silly gunzTarPerm extractEntry lib/httpclient.js
325 silly gunzTarPerm extractEntry lib/binary.js
326 silly gunzTarPerm extractEntry lib/io.js
327 silly gunzTarPerm extractEntry lib/system.js
328 silly gunzTarPerm extractEntry lib/run.js
329 silly gunzTarPerm extractEntry lib/socket.js
330 silly gunzTarPerm extractEntry lib/subprocess.js
331 silly gunzTarPerm extractEntry lib/assert.js
332 silly gunzTarPerm extractEntry lib/test.js
333 silly gunzTarPerm extractEntry lib/httpserver.js
334 silly gunzTarPerm extractEntry lib/ringo/httpclient.js
335 silly gunzTarPerm extractEntry test/all.js
336 silly gunzTarPerm extractEntry test/http.js
337 silly gunzTarPerm extractEntry test/io.js
338 silly gunzTarPerm extractEntry test/jsgi.js
339 silly gunzTarPerm extractEntry test/subprocess.js
340 silly gunzTarPerm extractEntry test/binary/all.js
341 silly gunzTarPerm extractEntry test/binary/bytearray-encodings-tests.js
342 silly gunzTarPerm extractEntry test/binary/bytearray-tests.js
343 silly gunzTarPerm extractEntry test/binary/bytestring-encodings-tests.js
344 silly gunzTarPerm extractEntry test/binary/bytestring-tests.js
345 silly gunzTarPerm extractEntry test/fs-base/all.js
346 silly gunzTarPerm extractEntry test/fs-base/dirname.js
347 silly gunzTarPerm extractEntry test/fs-base/extension.js
348 silly gunzTarPerm extractEntry test/fs-base/iterator.js
349 silly gunzTarPerm extractEntry test/fs-base/main.js
350 silly gunzTarPerm extractEntry test/fs-base/normal.js
351 silly gunzTarPerm extractEntry test/fs-base/path.js
352 silly gunzTarPerm extractEntry test/fs-base/relative.js
353 silly gunzTarPerm extractEntry test/fs-base/resolve.js
354 silly gunzTarPerm extractEntry tools/jsdoc/hosted.html
355 silly gunzTarPerm extractEntry tools/jsdoc/jsdoc.css
356 silly gunzTarPerm extractEntry tools/jsdoc/static.html
357 silly gunzTarPerm extractEntry tools/jsdoc/style.css
358 verbose write writing to C:\Meteor\zupjs4\zupjs\node_modules\fibers\package.json
359 info preinstall fibers@1.0.10
360 verbose readDependencies loading dependencies from C:\Meteor\zupjs4\zupjs\node_modules\fibers\package.json
361 verbose readDependencies loading dependencies from C:\Meteor\zupjs4\zupjs\node_modules\fibers\package.json
362 silly install resolved []
363 verbose about to build C:\Meteor\zupjs4\zupjs\node_modules\fibers
364 info build C:\Meteor\zupjs4\zupjs\node_modules\fibers
365 info linkStuff fibers@1.0.10
366 silly linkStuff fibers@1.0.10 has C:\Meteor\zupjs4\zupjs\node_modules as its parent node_modules
367 verbose linkBins fibers@1.0.10
368 verbose linkMans fibers@1.0.10
369 verbose rebuildBundles fibers@1.0.10
370 info install fibers@1.0.10
371 verbose unsafe-perm in lifecycle true
372 verbose write writing to C:\Meteor\zupjs4\zupjs\node_modules\common-node\package.json
373 info preinstall common-node@0.10.20
374 verbose readDependencies loading dependencies from C:\Meteor\zupjs4\zupjs\node_modules\common-node\package.json
375 verbose readDependencies loading dependencies from C:\Meteor\zupjs4\zupjs\node_modules\common-node\package.json
376 silly install resolved []
377 verbose about to build C:\Meteor\zupjs4\zupjs\node_modules\common-node
378 info build C:\Meteor\zupjs4\zupjs\node_modules\common-node
379 info linkStuff common-node@0.10.20
380 silly linkStuff common-node@0.10.20 has C:\Meteor\zupjs4\zupjs\node_modules as its parent node_modules
381 warn prefer global common-node@0.10.20 should be installed with -g
382 verbose linkBins common-node@0.10.20
383 verbose link bins [ { 'common-node': './bin/common-node' },
383 verbose link bins   'C:\\Meteor\\zupjs4\\zupjs\\node_modules\\.bin',
383 verbose link bins   false ]
384 verbose linkMans common-node@0.10.20
385 verbose rebuildBundles common-node@0.10.20
386 info install common-node@0.10.20
387 info postinstall common-node@0.10.20
388 verbose unlock done using C:\Users\Егор\AppData\Roaming\npm-cache\_locks\common-node-c2df3467fcb677ed.lock for C:\Meteor\zupjs4\zupjs\node_modules\common-node
389 info fibers@1.0.10 Failed to exec install script
390 verbose unlock done using C:\Users\Егор\AppData\Roaming\npm-cache\_locks\fibers-769700e8d12c08c8.lock for C:\Meteor\zupjs4\zupjs\node_modules\fibers
391 verbose stack Error: fibers@1.0.10 install: `node build.js || nodejs build.js`
391 verbose stack Exit status 1
391 verbose stack     at EventEmitter.<anonymous> (C:\Users\Егор\AppData\Local\.meteor\packages\meteor-tool\1.3.0_3\mt-os.windows.x86_32\dev_bundle\lib\node_modules\npm\lib\utils\lifecycle.js:217:16)
391 verbose stack     at EventEmitter.emit (events.js:98:17)
391 verbose stack     at ChildProcess.<anonymous> (C:\Users\Егор\AppData\Local\.meteor\packages\meteor-tool\1.3.0_3\mt-os.windows.x86_32\dev_bundle\lib\node_modules\npm\lib\utils\spawn.js:24:14)
391 verbose stack     at ChildProcess.emit (events.js:98:17)
391 verbose stack     at maybeClose (child_process.js:766:16)
391 verbose stack     at Process.ChildProcess._handle.onexit (child_process.js:833:5)
392 verbose pkgid fibers@1.0.10
393 verbose cwd C:\Meteor\zupjs4\zupjs
394 error Windows_NT 10.0.10240
395 error argv "C:\\Users\\Егор\\AppData\\Local\\.meteor\\packages\\meteor-tool\\1.3.0_3\\mt-os.windows.x86_32\\dev_bundle\\bin\\\\node.exe" "C:\\Users\\Егор\\AppData\\Local\\.meteor\\packages\\meteor-tool\\1.3.0_3\\mt-os.windows.x86_32\\dev_bundle\\lib\\node_modules\\npm\\bin\\npm-cli.js" "install" "--save" "xmlhttprequest" "fibers" "common-node"
396 error node v0.10.43
397 error npm  v2.14.22
398 error code ELIFECYCLE
399 error fibers@1.0.10 install: `node build.js || nodejs build.js`
399 error Exit status 1
400 error Failed at the fibers@1.0.10 install script 'node build.js || nodejs build.js'.
400 error This is most likely a problem with the fibers package,
400 error not with npm itself.
400 error Tell the author that this fails on your system:
400 error     node build.js || nodejs build.js
400 error You can get information on how to open an issue for this project with:
400 error     npm bugs fibers
400 error Or if that isn't available, you can get their info via:
400 error
400 error     npm owner ls fibers
400 error There is likely additional logging output above.
401 verbose exit [ 1, true ]
402 verbose unbuild node_modules\fibers
403 info preuninstall fibers@1.0.10
404 info uninstall fibers@1.0.10
405 verbose unbuild rmStuff fibers@1.0.10 from C:\Meteor\zupjs4\zupjs\node_modules
406 info postuninstall fibers@1.0.10
407 silly gentlyRm C:\Meteor\zupjs4\zupjs\node_modules\fibers is being purged from base C:\Meteor\zupjs4\zupjs
408 verbose gentlyRm don't care about contents; nuking C:\Meteor\zupjs4\zupjs\node_modules\fibers
409 silly vacuum-fs purging C:\Meteor\zupjs4\zupjs\node_modules\fibers
410 silly vacuum-fs quitting because other entries in C:\Meteor\zupjs4\zupjs\node_modules
